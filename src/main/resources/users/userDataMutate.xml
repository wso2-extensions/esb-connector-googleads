<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 LLC. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->

<!-- Generated on 20-Sun, 10, 2024 20:56:39+0530 -->

<template xmlns="http://ws.apache.org/ns/synapse" name="userDataMutate">
    <!-- Path Parameter List -->
    <parameter name="customerId" description="Required. The ID of the customer for which to update the user data."/>
    <!-- Request Body Parameter List -->
    <parameter name="operations" description="Required. The list of operations to be done."/>
    <parameter name="userListId"
               description="Required. The ID of the user list to which the data is added or removed."/>
    <parameter name="inputStructure" description="The type of data source."/>
    <parameter name="userListCSVContent" description="User data in CSV format."/>
    <parameter name="operationType" description="The operation to be performed on the user list."/>
    <parameter name="userIdentifierSource" description="The source of the user identifier."/>
    <parameter name="jsonArrayContent" description="User data in JSON array format."/>
    <parameter name="responseVariable" description="Name of the variable to store operation output"/>
    <parameter name="overwriteBody" description="Replace Message Body with operation output"/>
    <sequence>
        <class name="org.wso2.carbon.google.ads.connector.RestURLBuilder">
            <property name="operationPath" value="/customers/{customerId}:uploadUserData"/>
            <property name="pathParameters" value="customerId,"/>
        </class>
        <filter regex="JSON_ARRAY" source="$func:inputStructure">
            <then>
                <class name="org.wso2.carbon.google.ads.connector.JSONContentProcessor">
                    <property name="jsonArrayContent" evaluator="xml" expression="$func:jsonArrayContent"/>
                    <property name="operationType" evaluator="xml" expression="$func:operationType"/>
                    <property name="userIdentifierSource" evaluator="xml" expression="$func:userIdentifierSource"/>
                    <property name="transactionAttributes" evaluator="xml" expression="$func:transactionAttributes"/>
                    <property name="userAttributes" evaluator="xml" expression="$func:userAttributes"/>
                    <property name="consent" evaluator="xml" expression="$func:consent"/>
                </class>
            </then>
            <else>
                <property name="preprocessed.parameters" expression="$func:operations"/>
            </else>
        </filter>
        <class name="org.wso2.carbon.google.ads.connector.ParameterNormalizer">
            <property name="parameters" evaluator="xml" expression="$ctx:preprocessed.parameters"/>
        </class>
        <payloadFactory media-type="json" template-type="freemarker">
            <format>
                <![CDATA[
                {
                    <#if (args.arg1)?has_content>
                        "operations": ${args.arg1},
                    </#if>
                    <#if (args.arg3)?has_content>
                        "customerMatchUserListMetadata": {
                            "userList": "customers/${args.arg2}/userLists/${args.arg3}"
                        }
                    </#if>
                }
                ]]>
            </format>
            <args>
                <arg evaluator="xml" expression="$ctx:normalized.parameters"/>
                <arg evaluator="xml" expression="$func:customerId"/>
                <arg evaluator="xml" expression="$func:userListId"/>
            </args>
        </payloadFactory>
        <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="ContentType" value="application/json" scope="axis2"/>
        <header name="Accept" value="application/json" scope="transport" action="set"/>
        <call>
            <endpoint>
                <http method="POST" uri-template="{uri.var.base}{+uri.var.urlPath}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom header information -->
        <header name="request-id" scope="transport" action="remove"/>
        <header name="x-xss-protection" scope="transport" action="remove"/>
        <header name="vary" scope="transport" action="remove"/>
        <header name="alt-svc" scope="transport" action="remove"/>
        <header name="server" scope="transport" action="remove"/>
        <header name="access-control-allow-origin" scope="transport" action="remove"/>
        <header name="access-control-allow-methods" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="access-control-allow-headers" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="cache-control" scope="transport" action="remove"/>
    </sequence>
</template>
